{
	"id": "8b28d07c409d607a28b9e1b395115531",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/member.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\ncontract participant{\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/member.sol": {
				"participant": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/member.sol\":27:57  contract participant{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/member.sol\":27:57  contract participant{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122024d334fff699f23656ee14a106f7fafc305f53e0329743c38a6e204cb4ba0dea64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122024d334fff699f23656ee14a106f7fafc305f53e0329743c38a6e204cb4ba0dea64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xD3 CALLVALUE SELFDESTRUCT 0xF6 SWAP10 CALLCODE CALLDATASIZE JUMP 0xEE EQ LOG1 MOD 0xF7 STATICCALL 0xFC ADDRESS 0x5F MSTORE8 0xE0 ORIGIN SWAP8 NUMBER 0xC3 DUP11 PUSH15 0x204CB4BA0DEA64736F6C6343000800 STOP CALLER ",
							"sourceMap": "27:30:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122024d334fff699f23656ee14a106f7fafc305f53e0329743c38a6e204cb4ba0dea64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xD3 CALLVALUE SELFDESTRUCT 0xF6 SWAP10 CALLCODE CALLDATASIZE JUMP 0xEE EQ LOG1 MOD 0xF7 STATICCALL 0xFC ADDRESS 0x5F MSTORE8 0xE0 ORIGIN SWAP8 NUMBER 0xC3 DUP11 PUSH15 0x204CB4BA0DEA64736F6C6343000800 STOP CALLER ",
							"sourceMap": "27:30:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 57,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 57,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 57,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 57,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 57,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 57,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 57,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 57,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 57,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 57,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 57,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 57,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 57,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 57,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 57,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 57,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 57,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122024d334fff699f23656ee14a106f7fafc305f53e0329743c38a6e204cb4ba0dea64736f6c63430008000033",
									".code": [
										{
											"begin": 27,
											"end": 57,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 57,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 57,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 57,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 57,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 57,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/member.sol\":\"participant\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/member.sol\":{\"keccak256\":\"0xc18d1b111a53794f758c9bc2c93e5c0a04d6a6e138c1e6fcc9fd7f799cc64b16\",\"urls\":[\"bzz-raw://055664585f90d658bdf261b46a2fea767a5ab9647d740af2e2e8f9d22f27b483\",\"dweb:/ipfs/QmUF4kstAUaYNZh42GzoitKCkXzPUQP1XbzT1AaSCcUCv3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/member.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/member.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/member.sol": {
				"ast": {
					"absolutePath": "contracts/member.sol",
					"exportedSymbols": {
						"participant": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "participant",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "27:30:0"
						}
					],
					"src": "0:57:0"
				},
				"id": 0
			}
		}
	}
}